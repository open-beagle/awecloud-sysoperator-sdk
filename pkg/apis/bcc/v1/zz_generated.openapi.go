//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"./pkg/apis/bcc/v1.BgGroup":                schema_pkg_apis_bcc_v1_BgGroup(ref),
		"./pkg/apis/bcc/v1.BgGroupNamespace":       schema_pkg_apis_bcc_v1_BgGroupNamespace(ref),
		"./pkg/apis/bcc/v1.BgGroupNamespaceSpec":   schema_pkg_apis_bcc_v1_BgGroupNamespaceSpec(ref),
		"./pkg/apis/bcc/v1.BgGroupNamespaceStatus": schema_pkg_apis_bcc_v1_BgGroupNamespaceStatus(ref),
		"./pkg/apis/bcc/v1.BgGroupSpec":            schema_pkg_apis_bcc_v1_BgGroupSpec(ref),
		"./pkg/apis/bcc/v1.BgGroupStatus":          schema_pkg_apis_bcc_v1_BgGroupStatus(ref),
		"./pkg/apis/bcc/v1.BgGroupUser":            schema_pkg_apis_bcc_v1_BgGroupUser(ref),
		"./pkg/apis/bcc/v1.BgGroupUserSpec":        schema_pkg_apis_bcc_v1_BgGroupUserSpec(ref),
		"./pkg/apis/bcc/v1.BgGroupUserStatus":      schema_pkg_apis_bcc_v1_BgGroupUserStatus(ref),
		"./pkg/apis/bcc/v1.BgMenu":                 schema_pkg_apis_bcc_v1_BgMenu(ref),
		"./pkg/apis/bcc/v1.BgMenuSpec":             schema_pkg_apis_bcc_v1_BgMenuSpec(ref),
		"./pkg/apis/bcc/v1.BgMenuStatus":           schema_pkg_apis_bcc_v1_BgMenuStatus(ref),
		"./pkg/apis/bcc/v1.BgRole":                 schema_pkg_apis_bcc_v1_BgRole(ref),
		"./pkg/apis/bcc/v1.BgRoleMenu":             schema_pkg_apis_bcc_v1_BgRoleMenu(ref),
		"./pkg/apis/bcc/v1.BgRoleMenuSpec":         schema_pkg_apis_bcc_v1_BgRoleMenuSpec(ref),
		"./pkg/apis/bcc/v1.BgRoleMenuStatus":       schema_pkg_apis_bcc_v1_BgRoleMenuStatus(ref),
		"./pkg/apis/bcc/v1.BgRoleSpec":             schema_pkg_apis_bcc_v1_BgRoleSpec(ref),
		"./pkg/apis/bcc/v1.BgRoleStatus":           schema_pkg_apis_bcc_v1_BgRoleStatus(ref),
		"./pkg/apis/bcc/v1.BgRoleUser":             schema_pkg_apis_bcc_v1_BgRoleUser(ref),
		"./pkg/apis/bcc/v1.BgRoleUserSpec":         schema_pkg_apis_bcc_v1_BgRoleUserSpec(ref),
		"./pkg/apis/bcc/v1.BgRoleUserStatus":       schema_pkg_apis_bcc_v1_BgRoleUserStatus(ref),
		"./pkg/apis/bcc/v1.BgUser":                 schema_pkg_apis_bcc_v1_BgUser(ref),
		"./pkg/apis/bcc/v1.BgUserSpec":             schema_pkg_apis_bcc_v1_BgUserSpec(ref),
		"./pkg/apis/bcc/v1.BgUserStatus":           schema_pkg_apis_bcc_v1_BgUserStatus(ref),
		"./pkg/apis/bcc/v1.BgIngressHost":          schema_pkg_apis_bcc_v1_BgIngressHost(ref),
		"./pkg/apis/bcc/v1.BgIngressHostSpec":      schema_pkg_apis_bcc_v1_BgIngressHostSpec(ref),
		"./pkg/apis/bcc/v1.BgIngressHostStatus":    schema_pkg_apis_bcc_v1_BgIngressHostStatus(ref),
	}
}

func schema_pkg_apis_bcc_v1_BgIngressHost(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgIngressHost is the Schema for the bgingresshosts API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgIngressHostSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgIngressHostStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgIngressHostSpec", "./pkg/apis/bcc/v1.BgIngressHostStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgIngressHostSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgIngressHostSpec defines the desired state of BgIngressHost",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgIngressHostStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgIngressHostStatus defines the observed state of BgIngressHost",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroup(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroup is the Schema for the bggroups API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgGroupSpec", "./pkg/apis/bcc/v1.BgGroupStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupNamespace(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupNamespace is the Schema for the bggroupnamespaces API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupNamespaceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupNamespaceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgGroupNamespaceSpec", "./pkg/apis/bcc/v1.BgGroupNamespaceStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupNamespaceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupNamespaceSpec defines the desired state of BgGroupNamespace",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupNamespaceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupNamespaceStatus defines the observed state of BgGroupNamespace",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupSpec defines the desired state of BgGroup",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupStatus defines the observed state of BgGroup",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupUser(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupUser is the Schema for the bggroupusers API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupUserSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgGroupUserStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgGroupUserSpec", "./pkg/apis/bcc/v1.BgGroupUserStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupUserSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupUserSpec defines the desired state of BgGroupUser",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgGroupUserStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgGroupUserStatus defines the observed state of BgGroupUser",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgMenu(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgMenu is the Schema for the bgmenus API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgMenuSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgMenuStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgMenuSpec", "./pkg/apis/bcc/v1.BgMenuStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgMenuSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgMenuSpec defines the desired state of BgMenu",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgMenuStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgMenuStatus defines the observed state of BgMenu",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRole(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRole is the Schema for the bgroles API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgRoleSpec", "./pkg/apis/bcc/v1.BgRoleStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleMenu(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleMenu is the Schema for the bgrolemenus API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleMenuSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleMenuStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgRoleMenuSpec", "./pkg/apis/bcc/v1.BgRoleMenuStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleMenuSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleMenuSpec defines the desired state of BgRoleMenu",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleMenuStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleMenuStatus defines the observed state of BgRoleMenu",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleSpec defines the desired state of BgRole",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleStatus defines the observed state of BgRole",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleUser(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleUser is the Schema for the bgroleusers API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleUserSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgRoleUserStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgRoleUserSpec", "./pkg/apis/bcc/v1.BgRoleUserStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleUserSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleUserSpec defines the desired state of BgRoleUser",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgRoleUserStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgRoleUserStatus defines the observed state of BgRoleUser",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgUser(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgUser is the Schema for the bgusers API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgUserSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/bcc/v1.BgUserStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/bcc/v1.BgUserSpec", "./pkg/apis/bcc/v1.BgUserStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_bcc_v1_BgUserSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgUserSpec defines the desired state of BgUser",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_bcc_v1_BgUserStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "BgUserStatus defines the observed state of BgUser",
				Type:        []string{"object"},
			},
		},
	}
}
